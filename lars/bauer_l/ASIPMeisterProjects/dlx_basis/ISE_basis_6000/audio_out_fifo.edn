(edif test (edifVersion 2 0 0) (edifLevel 0) (keywordMap (keywordLevel 0))
(status (written (timeStamp 2007 12 20 18 22 8)
   (author "Xilinx, Inc.")
   (program "Xilinx CORE Generator" (version "Xilinx CORE Generator 8.1.03i"))))
   (comment "                                                                                
      This file is owned and controlled by Xilinx and must be used              
      solely for design, simulation, implementation and creation of             
      design files limited to Xilinx devices or technologies. Use               
      with non-Xilinx devices or technologies is expressly prohibited           
      and immediately terminates your license.                                  
                                                                                
      XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION 'AS IS'             
      SOLELY FOR USE IN DEVELOPING PROGRAMS AND SOLUTIONS FOR                   
      XILINX DEVICES.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION           
      AS ONE POSSIBLE IMPLEMENTATION OF THIS FEATURE, APPLICATION               
      OR STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS                 
      IMPLEMENTATION IS FREE FROM ANY CLAIMS OF INFRINGEMENT,                   
      AND YOU ARE RESPONSIBLE FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE          
      FOR YOUR IMPLEMENTATION.  XILINX EXPRESSLY DISCLAIMS ANY                  
      WARRANTY WHATSOEVER WITH RESPECT TO THE ADEQUACY OF THE                   
      IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OR            
      REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE FROM CLAIMS OF           
      INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS           
      FOR A PARTICULAR PURPOSE.                                                 
                                                                                
      Xilinx products are not intended for use in life support                  
      appliances, devices, or systems. Use in such applications are             
      expressly prohibited.                                                     
                                                                                
      (c) Copyright 1995-2005 Xilinx, Inc.                                      
      All rights reserved.                                                      
                                                                                
   ")
   (comment "Core parameters: ")
       (comment "c_wr_response_latency = 1 ")
       (comment "c_has_rd_data_count = 0 ")
       (comment "c_din_width = 16 ")
       (comment "c_has_wr_data_count = 1 ")
       (comment "InstanceName = audio_out_fifo ")
       (comment "c_implementation_type = 2 ")
       (comment "c_family = virtex2 ")
       (comment "c_has_wr_rst = 0 ")
       (comment "c_underflow_low = 0 ")
       (comment "c_has_meminit_file = 0 ")
       (comment "c_has_overflow = 0 ")
       (comment "c_preload_latency = 1 ")
       (comment "c_dout_width = 16 ")
       (comment "c_rd_depth = 1024 ")
       (comment "c_default_value = BlankString ")
       (comment "c_mif_file_name = BlankString ")
       (comment "c_has_underflow = 0 ")
       (comment "c_has_rd_rst = 0 ")
       (comment "c_has_almost_full = 0 ")
       (comment "c_has_rst = 1 ")
       (comment "c_data_count_width = 2 ")
       (comment "c_has_wr_ack = 0 ")
       (comment "c_wr_ack_low = 0 ")
       (comment "c_common_clock = 0 ")
       (comment "c_rd_pntr_width = 10 ")
       (comment "c_has_almost_empty = 0 ")
       (comment "c_rd_data_count_width = 2 ")
       (comment "c_enable_rlocs = 0 ")
       (comment "c_wr_pntr_width = 10 ")
       (comment "c_overflow_low = 0 ")
       (comment "c_prog_empty_type = 0 ")
       (comment "c_optimization_mode = 0 ")
       (comment "c_wr_data_count_width = 8 ")
       (comment "c_preload_regs = 0 ")
       (comment "c_dout_rst_val = 0 ")
       (comment "c_has_data_count = 0 ")
       (comment "c_prog_full_thresh_negate_val = 768 ")
       (comment "c_wr_depth = 1024 ")
       (comment "c_prog_empty_thresh_negate_val = 256 ")
       (comment "c_prog_empty_thresh_assert_val = 256 ")
       (comment "c_has_valid = 0 ")
       (comment "c_init_wr_pntr_val = 0 ")
       (comment "c_prog_full_thresh_assert_val = 768 ")
       (comment "c_has_backup = 0 ")
       (comment "c_valid_low = 0 ")
       (comment "c_prim_fifo_type = 1024 ")
       (comment "c_count_type = 0 ")
       (comment "c_prog_full_type = 0 ")
       (comment "c_memory_type = 1 ")
   (external xilinxun (edifLevel 0)
      (technology (numberDefinition))
       (cell VCC (cellType GENERIC)
           (view view_1 (viewType NETLIST)
               (interface
                   (port P (direction OUTPUT))
               )
           )
       )
       (cell GND (cellType GENERIC)
           (view view_1 (viewType NETLIST)
               (interface
                   (port G (direction OUTPUT))
               )
           )
       )
   )
   (external audio_out_fifo_fifo_generator_v2_1_as_1_lib (edifLevel 0)
       (technology (numberDefinition))
       (cell audio_out_fifo_fifo_generator_v2_1_as_1 (cellType GENERIC)
           (view view_1 (viewType NETLIST)
               (interface
                   (port wr_clk (direction INPUT))
                   (port rd_clk (direction INPUT))
                   (port rst (direction INPUT))
                   (port ( array ( rename din "din<15:0>") 16 ) (direction INPUT))
                   (port wr_en (direction INPUT))
                   (port rd_en (direction INPUT))
                   (port ( array ( rename prog_full_thresh "prog_full_thresh<9:0>") 10 ) (direction INPUT))
                   (port ( array ( rename prog_full_thresh_assert "prog_full_thresh_assert<9:0>") 10 ) (direction INPUT))
                   (port ( array ( rename prog_full_thresh_negate "prog_full_thresh_negate<9:0>") 10 ) (direction INPUT))
                   (port ( array ( rename prog_empty_thresh "prog_empty_thresh<9:0>") 10 ) (direction INPUT))
                   (port ( array ( rename prog_empty_thresh_assert "prog_empty_thresh_assert<9:0>") 10 ) (direction INPUT))
                   (port ( array ( rename prog_empty_thresh_negate "prog_empty_thresh_negate<9:0>") 10 ) (direction INPUT))
                   (port ( array ( rename dout "dout<15:0>") 16 ) (direction OUTPUT))
                   (port full (direction OUTPUT))
                   (port almost_full (direction OUTPUT))
                   (port wr_ack (direction OUTPUT))
                   (port overflow (direction OUTPUT))
                   (port empty (direction OUTPUT))
                   (port almost_empty (direction OUTPUT))
                   (port valid (direction OUTPUT))
                   (port underflow (direction OUTPUT))
                   (port ( array ( rename rd_data_count "rd_data_count<1:0>") 2 ) (direction OUTPUT))
                   (port ( array ( rename wr_data_count "wr_data_count<7:0>") 8 ) (direction OUTPUT))
                   (port prog_full (direction OUTPUT))
                   (port prog_empty (direction OUTPUT))
                   (port ( array ( rename debug_wr_pntr "debug_wr_pntr<9:0>") 10 ) (direction OUTPUT))
                   (port ( array ( rename debug_rd_pntr "debug_rd_pntr<9:0>") 10 ) (direction OUTPUT))
                   (port debug_ram_wr_en (direction OUTPUT))
                   (port debug_ram_rd_en (direction OUTPUT))
                   (port ( array ( rename debug_wr_pntr_w "debug_wr_pntr_w<9:0>") 10 ) (direction OUTPUT))
                   (port ( array ( rename debug_wr_pntr_plus1_w "debug_wr_pntr_plus1_w<9:0>") 10 ) (direction OUTPUT))
                   (port ( array ( rename debug_wr_pntr_plus2_w "debug_wr_pntr_plus2_w<9:0>") 10 ) (direction OUTPUT))
                   (port ( array ( rename debug_wr_pntr_r "debug_wr_pntr_r<9:0>") 10 ) (direction OUTPUT))
                   (port ( array ( rename debug_rd_pntr_r "debug_rd_pntr_r<9:0>") 10 ) (direction OUTPUT))
                   (port ( array ( rename debug_rd_pntr_plus1_r "debug_rd_pntr_plus1_r<9:0>") 10 ) (direction OUTPUT))
                   (port ( array ( rename debug_rd_pntr_w "debug_rd_pntr_w<9:0>") 10 ) (direction OUTPUT))
                   (port debug_ram_empty (direction OUTPUT))
                   (port debug_ram_full (direction OUTPUT))
               )
           )
       )
   )
(library test_lib (edifLevel 0) (technology (numberDefinition (scale 1 (E 1 -12) (unit Time))))
(cell audio_out_fifo
 (cellType GENERIC) (view view_1 (viewType NETLIST)
  (interface
   (port ( array ( rename din "din<15:0>") 16 ) (direction INPUT))
   (port ( rename rd_clk "rd_clk") (direction INPUT))
   (port ( rename rd_en "rd_en") (direction INPUT))
   (port ( rename rst "rst") (direction INPUT))
   (port ( rename wr_clk "wr_clk") (direction INPUT))
   (port ( rename wr_en "wr_en") (direction INPUT))
   (port ( array ( rename dout "dout<15:0>") 16 ) (direction OUTPUT))
   (port ( rename empty "empty") (direction OUTPUT))
   (port ( rename full "full") (direction OUTPUT))
   (port ( array ( rename wr_data_count "wr_data_count<7:0>") 8 ) (direction OUTPUT))
   )
  (contents
   (instance VCC (viewRef view_1 (cellRef VCC  (libraryRef xilinxun))))
   (instance GND (viewRef view_1 (cellRef GND  (libraryRef xilinxun))))
   (instance BU2
      (viewRef view_1 (cellRef audio_out_fifo_fifo_generator_v2_1_as_1 (libraryRef audio_out_fifo_fifo_generator_v2_1_as_1_lib)))
   )
   (net (rename N99 "din<15>")
    (joined
      (portRef (member din 0))
      (portRef (member din 0) (instanceRef BU2))
    )
   )
   (net (rename N100 "din<14>")
    (joined
      (portRef (member din 1))
      (portRef (member din 1) (instanceRef BU2))
    )
   )
   (net (rename N101 "din<13>")
    (joined
      (portRef (member din 2))
      (portRef (member din 2) (instanceRef BU2))
    )
   )
   (net (rename N102 "din<12>")
    (joined
      (portRef (member din 3))
      (portRef (member din 3) (instanceRef BU2))
    )
   )
   (net (rename N103 "din<11>")
    (joined
      (portRef (member din 4))
      (portRef (member din 4) (instanceRef BU2))
    )
   )
   (net (rename N104 "din<10>")
    (joined
      (portRef (member din 5))
      (portRef (member din 5) (instanceRef BU2))
    )
   )
   (net (rename N105 "din<9>")
    (joined
      (portRef (member din 6))
      (portRef (member din 6) (instanceRef BU2))
    )
   )
   (net (rename N106 "din<8>")
    (joined
      (portRef (member din 7))
      (portRef (member din 7) (instanceRef BU2))
    )
   )
   (net (rename N107 "din<7>")
    (joined
      (portRef (member din 8))
      (portRef (member din 8) (instanceRef BU2))
    )
   )
   (net (rename N108 "din<6>")
    (joined
      (portRef (member din 9))
      (portRef (member din 9) (instanceRef BU2))
    )
   )
   (net (rename N109 "din<5>")
    (joined
      (portRef (member din 10))
      (portRef (member din 10) (instanceRef BU2))
    )
   )
   (net (rename N110 "din<4>")
    (joined
      (portRef (member din 11))
      (portRef (member din 11) (instanceRef BU2))
    )
   )
   (net (rename N111 "din<3>")
    (joined
      (portRef (member din 12))
      (portRef (member din 12) (instanceRef BU2))
    )
   )
   (net (rename N112 "din<2>")
    (joined
      (portRef (member din 13))
      (portRef (member din 13) (instanceRef BU2))
    )
   )
   (net (rename N113 "din<1>")
    (joined
      (portRef (member din 14))
      (portRef (member din 14) (instanceRef BU2))
    )
   )
   (net (rename N114 "din<0>")
    (joined
      (portRef (member din 15))
      (portRef (member din 15) (instanceRef BU2))
    )
   )
   (net (rename N175 "rd_clk")
    (joined
      (portRef rd_clk)
      (portRef rd_clk (instanceRef BU2))
    )
   )
   (net (rename N176 "rd_en")
    (joined
      (portRef rd_en)
      (portRef rd_en (instanceRef BU2))
    )
   )
   (net (rename N178 "rst")
    (joined
      (portRef rst)
      (portRef rst (instanceRef BU2))
    )
   )
   (net (rename N179 "wr_clk")
    (joined
      (portRef wr_clk)
      (portRef wr_clk (instanceRef BU2))
    )
   )
   (net (rename N180 "wr_en")
    (joined
      (portRef wr_en)
      (portRef wr_en (instanceRef BU2))
    )
   )
   (net (rename N186 "dout<15>")
    (joined
      (portRef (member dout 0))
      (portRef (member dout 0) (instanceRef BU2))
    )
   )
   (net (rename N187 "dout<14>")
    (joined
      (portRef (member dout 1))
      (portRef (member dout 1) (instanceRef BU2))
    )
   )
   (net (rename N188 "dout<13>")
    (joined
      (portRef (member dout 2))
      (portRef (member dout 2) (instanceRef BU2))
    )
   )
   (net (rename N189 "dout<12>")
    (joined
      (portRef (member dout 3))
      (portRef (member dout 3) (instanceRef BU2))
    )
   )
   (net (rename N190 "dout<11>")
    (joined
      (portRef (member dout 4))
      (portRef (member dout 4) (instanceRef BU2))
    )
   )
   (net (rename N191 "dout<10>")
    (joined
      (portRef (member dout 5))
      (portRef (member dout 5) (instanceRef BU2))
    )
   )
   (net (rename N192 "dout<9>")
    (joined
      (portRef (member dout 6))
      (portRef (member dout 6) (instanceRef BU2))
    )
   )
   (net (rename N193 "dout<8>")
    (joined
      (portRef (member dout 7))
      (portRef (member dout 7) (instanceRef BU2))
    )
   )
   (net (rename N194 "dout<7>")
    (joined
      (portRef (member dout 8))
      (portRef (member dout 8) (instanceRef BU2))
    )
   )
   (net (rename N195 "dout<6>")
    (joined
      (portRef (member dout 9))
      (portRef (member dout 9) (instanceRef BU2))
    )
   )
   (net (rename N196 "dout<5>")
    (joined
      (portRef (member dout 10))
      (portRef (member dout 10) (instanceRef BU2))
    )
   )
   (net (rename N197 "dout<4>")
    (joined
      (portRef (member dout 11))
      (portRef (member dout 11) (instanceRef BU2))
    )
   )
   (net (rename N198 "dout<3>")
    (joined
      (portRef (member dout 12))
      (portRef (member dout 12) (instanceRef BU2))
    )
   )
   (net (rename N199 "dout<2>")
    (joined
      (portRef (member dout 13))
      (portRef (member dout 13) (instanceRef BU2))
    )
   )
   (net (rename N200 "dout<1>")
    (joined
      (portRef (member dout 14))
      (portRef (member dout 14) (instanceRef BU2))
    )
   )
   (net (rename N201 "dout<0>")
    (joined
      (portRef (member dout 15))
      (portRef (member dout 15) (instanceRef BU2))
    )
   )
   (net (rename N202 "empty")
    (joined
      (portRef empty)
      (portRef empty (instanceRef BU2))
    )
   )
   (net (rename N203 "full")
    (joined
      (portRef full)
      (portRef full (instanceRef BU2))
    )
   )
   (net (rename N212 "wr_data_count<7>")
    (joined
      (portRef (member wr_data_count 0))
      (portRef (member wr_data_count 0) (instanceRef BU2))
    )
   )
   (net (rename N213 "wr_data_count<6>")
    (joined
      (portRef (member wr_data_count 1))
      (portRef (member wr_data_count 1) (instanceRef BU2))
    )
   )
   (net (rename N214 "wr_data_count<5>")
    (joined
      (portRef (member wr_data_count 2))
      (portRef (member wr_data_count 2) (instanceRef BU2))
    )
   )
   (net (rename N215 "wr_data_count<4>")
    (joined
      (portRef (member wr_data_count 3))
      (portRef (member wr_data_count 3) (instanceRef BU2))
    )
   )
   (net (rename N216 "wr_data_count<3>")
    (joined
      (portRef (member wr_data_count 4))
      (portRef (member wr_data_count 4) (instanceRef BU2))
    )
   )
   (net (rename N217 "wr_data_count<2>")
    (joined
      (portRef (member wr_data_count 5))
      (portRef (member wr_data_count 5) (instanceRef BU2))
    )
   )
   (net (rename N218 "wr_data_count<1>")
    (joined
      (portRef (member wr_data_count 6))
      (portRef (member wr_data_count 6) (instanceRef BU2))
    )
   )
   (net (rename N219 "wr_data_count<0>")
    (joined
      (portRef (member wr_data_count 7))
      (portRef (member wr_data_count 7) (instanceRef BU2))
    )
   )
))))
(design audio_out_fifo (cellRef audio_out_fifo (libraryRef test_lib))
  (property X_CORE_INFO (string "fifo_generator_v2_1, Coregen 8.1.03i"))
  (property PART (string "xc2v3000-ff1152-6") (owner "Xilinx")))
)
