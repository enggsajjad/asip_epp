00000000	20010005	main:	addi	%r1, %r0, $5		; r1 := A;
00000001	20020007		addi	%r2, %r0, $7		; r2 := B;
00000002	00001820		add	%r3, %r0, %r0		; r3 := 0;     sp?ter gilt dann r3 := A*B;
00000003	00000000		sll	%r0, %r0, %r0		; NOP
00000004	30240001		andi	%r4, %r1, $1		; r4 merkt sich, ob A gerade oder ungerade ist.
00000005	00000000		sll	%r0, %r0, %r0		; NOP
00000006	44210001	loop:	srli	%r1, %r1, $1		; A /= 2;
00000007	40420001		slli	%r2, %r2, $1		; B *= 2;
00000008	10800004		beqz	%r4, skipAdd
00000009	00000000		nop
0000000a	00000000		nop
0000000b	00621820		add	%r3, %r3, %r2		; C := C + B'OLD;  // B'OLD deutet darauf hin, dass das letzte "B*=2" noch nicht aktiv ist.
0000000c	1420fffa	skipAdd:bnez	%r1, loop		; repeat until A==0
0000000d	30240001		andi	%r4, %r1, $1		; r4 merkt sich, ob A gerade oder ungerade ist.
0000000e	00000000		nop
0000000f	00000000		nop
00000010	ac030000		sw	0(%r0), %r3
00000011	00000000		sll	%r0, %r0, %r0		; NOP
00000012	00000000		sll	%r0, %r0, %r0		; NOP
00000013	00000000		sll	%r0, %r0, %r0		; NOP
00000014	ffffffff	; ----- HALT for simulator -----
