#### List of different label names for the same address:
#### Syntax: #:<TAB>LabelA_Name<TAB>LabelA_JumpTarget<TAB>LabelB_Name<TAB>LabelB_JumpTarget
#:	jal	exit:	inttostr:	
#:	inttostr:		l_inttostr_1:	
#:	j	l_inttostr_3:	l_inttostr_2:	
#:	j	l_inttostr_5:	l_inttostr_3:	
#:	j	l_inttostr_6:	l_inttostr_4:	
#:	j	l_inttostr_7:	l_inttostr_6:	
#:	j	l_inttostr_5:	l_inttostr_7:	
#:	j	l_inttostr_9:	l_inttostr_8:	
#:	j	l_inttostr_7:	l_inttostr_9:	
#:	j	l_inttostr_10:	l_inttostr_10:	
#:	return		checkbuffer:	
#:	checkbuffer:		l_lib_lcd_dlxsim_1:	
#:	j	l_lib_lcd_dlxsim_2:	l_lib_lcd_dlxsim_2:	
#:	return		getbytes:	
#:	getbytes:		l_lib_lcd_dlxsim_3:	
#:	j	l_lib_lcd_dlxsim_4:	l_lib_lcd_dlxsim_4:	
#:	return		sendcommand:	
#:	sendcommand:		l_lib_lcd_dlxsim_5:	
#:	j	l_lib_lcd_dlxsim_6:	l_lib_lcd_dlxsim_6:	
#:	return		t_print:	
#:	(null)
#:	j	l_lib_lcd_dlxsim_10:	l_lib_lcd_dlxsim_9:	
#:	j	l_lib_lcd_dlxsim_8:	l_lib_lcd_dlxsim_10:	
#:	j	l_lib_lcd_dlxsim_11:	l_lib_lcd_dlxsim_11:	
#:	return		t_cursor:	
#:	t_cursor:		l_lib_lcd_dlxsim_12:	
#:	j	l_lib_lcd_dlxsim_13:	l_lib_lcd_dlxsim_13:	
#:	return		t_enable:	
#:	t_enable:		l_lib_lcd_dlxsim_14:	
#:	j	l_lib_lcd_dlxsim_15:	l_lib_lcd_dlxsim_15:	
#:	return		g_print:	
#:	g_print:		l_lib_lcd_dlxsim_16:	
#:	j	l_lib_lcd_dlxsim_17:	l_lib_lcd_dlxsim_17:	
#:	return		g_drawrect:	
#:	g_drawrect:		l_lib_lcd_dlxsim_18:	
#:	j	l_lib_lcd_dlxsim_19:	l_lib_lcd_dlxsim_19:	
#:	return		g_drawline:	
#:	g_drawline:		l_lib_lcd_dlxsim_20:	
#:	j	l_lib_lcd_dlxsim_21:	l_lib_lcd_dlxsim_21:	
#:	return		g_makebar:	
#:	(null)
#:	j	l_lib_lcd_dlxsim_23:	l_lib_lcd_dlxsim_23:	
#:	return		g_setbar:	
#:	g_setbar:		l_lib_lcd_dlxsim_24:	
#:	j	l_lib_lcd_dlxsim_25:	l_lib_lcd_dlxsim_25:	
#:	return		g_makeswitch:	
#:	g_makeswitch:		l_lib_lcd_dlxsim_26:	
#:	j	l_lib_lcd_dlxsim_27:	l_lib_lcd_dlxsim_27:	
#:	return		g_makemenubutton:	
#:	g_makemenubutton:		l_lib_lcd_dlxsim_28:	
#:	j	l_lib_lcd_dlxsim_29:	l_lib_lcd_dlxsim_29:	
#:	return		g_makeradiogroup:	
#:	g_makeradiogroup:		l_lib_lcd_dlxsim_30:	
#:	j	l_lib_lcd_dlxsim_31:	l_lib_lcd_dlxsim_31:	
#:	return		d_clear:	
#:	d_clear:		l_lib_lcd_dlxsim_32:	
#:	j	l_lib_lcd_dlxsim_33:	l_lib_lcd_dlxsim_33:	
#:	return		loadbyteunsigned:	
#:	loadbyteunsigned:		l_loadstorebyte_1:	
#:	j	l_loadstorebyte_2:	l_loadstorebyte_2:	
#:	return		loadbytesigned:	
#:	loadbytesigned:		l_loadstorebyte_3:	
#:	j	l_loadstorebyte_4:	l_loadstorebyte_4:	
#:	return		storebyte:	
#:	storebyte:		l_loadstorebyte_5:	
#:	j	l_loadstorebyte_6:	l_loadstorebyte_6:	
#:	return		main:	
#:	main:		l_main_1:	
#:	j	l_main_3:	l_main_3:	
#:	j	l_main_5:	l_main_5:	
#:	j	l_main_7:	l_main_7:	
#:	j	l_main_9:	l_main_9:	
#:	j	l_main_11:	l_main_11:	
#:	j	l_main_13:	l_main_13:	
#:	j	l_main_15:	l_main_15:	
#:	j	l_main_19:	l_main_18:	
#:	j	l_main_20:	l_main_20:	
#:	j	l_main_21:	l_main_21:	
#:	j	l_main_22:	l_main_22:	

#### List of base blocks with number of executions and used special instructions:
#### Syntax: startLabel<TAB>startJumpInstruction<TAB>endLabel<TAB>endJumpInstruction<TAB>
####         startAddress<TAB>numberOfExecutions<TAB>executionTime<TAB>CSV{specialInstructions}<TAB>
####         CSV{SuccessingBaseBlocks(StartingAddress, Counter)}
start:		main:	jal	0	1	14		438:1
main:	jal	exit:	jal	12	1	5		899:1
l_inttostr_1:		l_inttostr_2:	bnez	15	0	0		
l_inttostr_2:	bnez	l_inttostr_3:	j	33	0	0		
l_inttostr_2:		storebyte:	jal	35	0	0		
storebyte:	jal	l_inttostr_5:	j	44	0	0		
l_inttostr_3:		l_inttostr_4:	bnez	50	0	0		
l_inttostr_4:	bnez	l_inttostr_6:	j	56	0	0		
l_inttostr_4:		storebyte:	jal	58	0	0		
storebyte:	jal	l_inttostr_5:		64	0	0		
l_inttostr_5:		l_inttostr_6:	bnez	68	0	0		
l_inttostr_6:	bnez	l_inttostr_7:	j	74	0	0		
l_inttostr_6:		storebyte:	jal	76	0	0		
storebyte:	jal	l_inttostr_5:	j	87	0	0		
l_inttostr_7:		l_inttostr_8:	bnez	98	0	0		
l_inttostr_8:	bnez	l_inttostr_9:	j	104	0	0		
l_inttostr_8:		loadbyteunsigned:	jal	106	0	0		
loadbyteunsigned:	jal	storebyte:	jal	114	0	0		
storebyte:	jal	l_inttostr_7:	j	122	0	0		
l_inttostr_9:		storebyte:	jal	128	0	0		
storebyte:	jal	l_inttostr_10:	j	136	0	0		
l_inttostr_10:			return	141	0	0		
l_lib_lcd_dlxsim_1:		l_lib_lcd_dlxsim_2:	j	146	0	0		
l_lib_lcd_dlxsim_2:			return	154	0	0		
l_lib_lcd_dlxsim_3:		l_lib_lcd_dlxsim_4:	j	159	0	0		
l_lib_lcd_dlxsim_4:			return	167	0	0		
l_lib_lcd_dlxsim_5:		l_lib_lcd_dlxsim_6:	j	172	0	0		
l_lib_lcd_dlxsim_6:			return	180	0	0		
l_lib_lcd_dlxsim_7:		l_lib_lcd_dlxsim_8:		185	0	0		
l_lib_lcd_dlxsim_8:		l_lib_lcd_dlxsim_9:	bnez	190	0	0		
l_lib_lcd_dlxsim_9:	bnez	l_lib_lcd_dlxsim_10:	j	196	0	0		
l_lib_lcd_dlxsim_9:		l_lib_lcd_dlxsim_8:	j	198	0	0		
l_lib_lcd_dlxsim_10:		l_lib_lcd_dlxsim_11:	j	206	0	0		
l_lib_lcd_dlxsim_11:			return	210	0	0		
l_lib_lcd_dlxsim_12:		l_lib_lcd_dlxsim_13:	j	215	0	0		
l_lib_lcd_dlxsim_13:			return	223	0	0		
l_lib_lcd_dlxsim_14:		l_lib_lcd_dlxsim_15:	j	228	0	0		
l_lib_lcd_dlxsim_15:			return	236	0	0		
l_lib_lcd_dlxsim_16:		l_lib_lcd_dlxsim_17:	j	241	0	0		
l_lib_lcd_dlxsim_17:			return	249	0	0		
l_lib_lcd_dlxsim_18:		l_lib_lcd_dlxsim_19:	j	254	0	0		
l_lib_lcd_dlxsim_19:			return	262	0	0		
l_lib_lcd_dlxsim_20:		l_lib_lcd_dlxsim_21:	j	267	0	0		
l_lib_lcd_dlxsim_21:			return	275	0	0		
l_lib_lcd_dlxsim_22:		l_lib_lcd_dlxsim_23:	j	280	0	0		
l_lib_lcd_dlxsim_23:			return	288	0	0		
l_lib_lcd_dlxsim_24:		l_lib_lcd_dlxsim_25:	j	293	0	0		
l_lib_lcd_dlxsim_25:			return	301	0	0		
l_lib_lcd_dlxsim_26:		l_lib_lcd_dlxsim_27:	j	306	0	0		
l_lib_lcd_dlxsim_27:			return	314	0	0		
l_lib_lcd_dlxsim_28:		l_lib_lcd_dlxsim_29:	j	319	0	0		
l_lib_lcd_dlxsim_29:			return	327	0	0		
l_lib_lcd_dlxsim_30:		l_lib_lcd_dlxsim_31:	j	332	0	0		
l_lib_lcd_dlxsim_31:			return	340	0	0		
l_lib_lcd_dlxsim_32:		l_lib_lcd_dlxsim_33:	j	345	0	0		
l_lib_lcd_dlxsim_33:			return	353	0	0		
l_loadstorebyte_1:		l_loadstorebyte_2:	j	358	0	0		
l_loadstorebyte_2:			return	375	0	0		
l_loadstorebyte_3:		l_loadstorebyte_4:	j	380	0	0		
l_loadstorebyte_4:			return	399	0	0		
l_loadstorebyte_5:		l_loadstorebyte_6:	j	404	0	0		
l_loadstorebyte_6:			return	433	0	0		
l_main_1:		l_main_2:		438	1	55		456:1
l_main_2:		l_main_2:	bnez	456	128	50		456:127, 470:1
l_main_2:	bnez	l_main_3:	j	470	1	2		472:1
l_main_3:		l_main_4:		472	1	3		474:1
l_main_4:		l_main_4:	bnez	474	8	50		474:7, 488:1
l_main_4:	bnez	l_main_5:	j	488	1	2		490:1
l_main_5:		l_main_6:		490	1	3		492:1
l_main_6:		l_main_6:	bnez	492	16	333	mac, mac, mac	492:15, 548:1
l_main_6:	bnez	l_main_7:	j	548	1	2		550:1
l_main_7:		l_main_8:		550	1	3		552:1
l_main_8:		l_main_8:	bnez	552	16	333	mac, mac, mac	552:15, 608:1
l_main_8:	bnez	l_main_9:	j	608	1	2		610:1
l_main_9:		l_main_10:		610	1	3		612:1
l_main_10:		l_main_10:	bnez	612	16	333	mac, mac, mac	612:15, 668:1
l_main_10:	bnez	l_main_11:	j	668	1	2		670:1
l_main_11:		l_main_12:		670	1	3		672:1
l_main_12:		l_main_12:	bnez	672	4	1247	mac, mac, mac, mac, mac, mac, mac, mac, mac, mac, mac, mac	672:3, 822:1
l_main_12:	bnez	l_main_13:	j	822	1	2		824:1
l_main_13:		l_main_14:		824	1	3		826:1
l_main_14:		l_main_14:	bnez	826	16	7		826:15, 832:1
l_main_14:	bnez	l_main_15:	j	832	1	2		834:1
l_main_15:		l_main_16:		834	1	3		836:1
l_main_16:		l_main_17:		836	16	3		838:16
l_main_17:		l_main_18:	bnez	838	256	104	satd4x4	856:6, 854:250
l_main_18:	bnez	l_main_19:	j	854	250	2		863:250
l_main_18:		l_main_19:		856	6	43		863:6
l_main_19:		l_main_17:	bnez	863	256	7		838:240, 869:16
l_main_17:	bnez	l_main_20:	j	869	16	2		871:16
l_main_20:		l_main_16:	bnez	871	16	66	dct4x4	836:15, 887:1
l_main_16:	bnez	l_main_21:	j	887	1	2		889:1
l_main_21:		l_main_22:	j	889	1	21	ht4x4il	893:1
l_main_22:			return	893	1	8		12:1
	return	exit:		898	0	0		
exit:		finish:		899	1	0		

#### List of JumpTable Usages:
####   Syntax is: "#;<TAB>BaseBlockLabel<TAB>CSV(JumpTargets)"
####   "BaseBlockLabel" is the starting label of the baseBlock where the JumpTable is used, e.g. L10.
####   Then in the above Base Block List there must be something like: "L10<TAB><TAB><TAB>jr".
####   "CSV" are the Comma Seperated Values of the possible Jump Targets in this Jump Table
