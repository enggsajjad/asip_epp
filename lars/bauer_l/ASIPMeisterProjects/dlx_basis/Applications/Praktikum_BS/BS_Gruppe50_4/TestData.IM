00000000	3c1d0000		lhi	%r29, $(((1024-4)*65536)&0xffff)	; MemSize is 1024
00000001	00000000		nop
00000002	00000000		nop
00000003	00000000		nop
00000004	27bd03fc		addui	%r29, %r29, $((1024-4)&0xffff)
00000005	00000000		nop
00000006	00000000		nop
00000007	00000000		nop
00000008	2bbd000c		subi	%r29, %r29, $12		; Adjust Stack Pointer
00000009	00000000		nop
0000000a	00000000		nop
0000000b	00000000		nop
0000000c	afbe0000		sw	0(%r29), %r30		; Save the old frame pointer
0000000d	afbf0004		sw	4(%r29), %r31		; Save the return address
0000000e	afa10008		sw	8(%r29), %r1		; Save r1, which is used in main.
0000000f	001df020		add	%r30, %r0, %r29		; Establish new frame pointer
00000010	2bbd0008		subi	%r29, %r29, $8		; create place for the parameters
00000011	00000000		nop
00000012	00000000		nop
00000013	00000000		nop
00000014	afa00000		sw	0(%r29), %r0		; "const unsigned int startIndex"
00000015	20010031		addi	%r1, %r0, $49
00000016	00000000		nop
00000017	00000000		nop
00000018	00000000		nop
00000019	afa10004		sw	4(%r29), %r1		; "const unsigned int endIndex"
0000001a	0c00000c		jal	_bubbleSort
0000001b	00000000		nop
0000001c	23bd0008		addi	%r29, %r29, $8
0000001d	00000000		nop
0000001e	00000000		nop
0000001f	00000000		nop
00000020	8fbe0000		lw	%r30, 0(%r29)		; Restore frame pointer
00000021	8fbf0004		lw	%r31, 4(%r29)		; Restore return address
00000022	8fa10008		lw	%r1,  8(%r29)		; Restore r1
00000023	001ee820		add	%r29, %r0, %r30		; Restore stack pointer
00000024	0c00004a		jal	_exit
00000025	00000000		nop
00000026	00000000		nop
00000027	001df020		add	%r30, %r0, %r29		; Establish new frame pointer 
00000028	2bbd0030		subi	%r29, %r29, $(8 + 10*4)	; Adjust Stack Pointer; 8 for oldFP+RET and x*4 for saved Registers
00000029	00000000		nop
0000002a	00000000		nop
0000002b	00000000		nop
0000002c	afbe0000		sw	0(%r29), %r30		; Save the frame pointer 
0000002d	afbf0004		sw	4(%r29), %r31		; Save the return address 
0000002e	afa10008		sw	 8(%r29), %r1		; r1 is used for comparing-results and for temporary stuff.
0000002f	afa2000c		sw	12(%r29), %r2		; r2 is the parameter value "startIndex".
00000030	afa30010		sw	16(%r29), %r3		; r3 is the parameter value "endIndex".
00000031	afa40014		sw	20(%r29), %r4		; r4 is the loop-variable "i".
00000032	afa50018		sw	24(%r29), %r5		; r5 is the loop-variable "j".
00000033	afa6001c		sw	28(%r29), %r6		; r6 is the loop-end "innerLoopEnd".
00000034	afa70020		sw	32(%r29), %r7		; r7 is "next_j".
00000035	afa80024		sw	36(%r29), %r8		; r8 is "value_j".
00000036	afa90028		sw	40(%r29), %r9		; r9 is "value_next_j".
00000037	afaa002c		sw	44(%r29), %r10		; r10 is the start address of 'array'.
00000038	00000000		nop
00000039	8fc20000		lw	%r2, 0(%r30)
0000003a	8fc30004		lw	%r3, 4(%r30)
0000003b	3c0a0000		lhi	%r10, $(_array*65536)&0xffff
0000003c	00000000		nop
0000003d	00000000		nop
0000003e	00000000		nop
0000003f	254a0000		addui	%r10, %r10, $(_array&0xffff)
00000040	40630002		slli %r3, %r3, $2
00000041	00022020		add %r4, %r0, %r2
00000042	00000000		nop
00000043	01423820		add %r7, %r10, %r2
00000044	00000000		nop
00000045	00000000		nop
00000046	01433020		add %r6, %r10, %r3
00000047	00000000		nop
00000048	00000000		nop
00000049	00072820		add %r5, %r0, %r7
0000004a	20c60004		addi %r6, %r6, $4
0000004b	00000000		nop
0000004c	00000000		nop
0000004d	8ce90004		lw %r9, 4(%r7) 
0000004e	f8830011	startOuter: bgeu %r4, %r3, endOuter
0000004f	28c60004		subi %r6, %r6, $4
00000050	8ce90004		lw %r9, 4(%r7) 
00000051	8ce80000		lw  %r8, 0(%r7)
00000052	00000000		nop
00000053	f8a60009		bgeu %r5, %r6, endInner
00000054	20a50004		addi %r5, %r5, $4
00000055	f9280004		bgeu %r9, %r8, endIf
00000056	00084820		add %r9, %r0, %r8
00000057	aca90000		sw  0(%r5), %r9
00000058	aca80000		sw  0(%r5), %r8
00000059	00094020		add %r8, %r0, %r9
0000005a	0bfffff9		j startInner
0000005b	8ca90004		lw %r9, 4(%r5) 
0000005c	20840001	endInner: addi %r4, %r4, $1
0000005d	0bfffff1		j startOuter
0000005e	00072820		add %r5, %r0, %r7
0000005f	8fbe0000		lw	%r30, 0(%r29)		; Restore frame pointer
00000060	8fbf0004		lw	%r31, 4(%r29)		; Restore return address
00000061	8fa10008		lw	%r1, 8(%r29)
00000062	8fa2000c		lw	%r2, 12(%r29)
00000063	8fa30010		lw	%r3, 16(%r29)
00000064	8fa40014		lw	%r4, 20(%r29)
00000065	8fa50018		lw	%r5, 24(%r29)
00000066	8fa6001c		lw	%r6, 28(%r29)
00000067	8fa70020		lw	%r7, 32(%r29)
00000068	8fa80024		lw	%r8, 36(%r29)
00000069	8fa90028		lw	%r9, 40(%r29)
0000006a	8faa0030		lw	%r10,48(%r29)
0000006b	001ee820		add	%r29, %r0, %r30		; Restore stack pointer
0000006c	03e00008		jr	%r31
0000006d	00000000		nop
0000006e	00000000	_exit:	nop
0000006f	00000000		nop
00000070	ffffffff	; ----- HALT for simulator -----
