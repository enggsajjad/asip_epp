00000000	3c1d0000		lhi	%r29, $(((1024-4)*65536)&0xffff)	; MemSize is 1024
00000001	27bd03fc		addui	%r29, %r29, $((1024-4)&0xffff)
00000002	2bbd000c		subi	%r29, %r29, $12		; Adjust Stack Pointer
00000003	afbe0000		sw	0(%r29), %r30		; Save the old frame pointer
00000004	afbf0004		sw	4(%r29), %r31		; Save the return address
00000005	afa10008		sw	8(%r29), %r1		; Save r1, which will be overwritten in main
00000006	001df020		add	%r30, %r0, %r29		; Establish new frame pointer
00000007	2bbd0008		subi	%r29, %r29, $8		; create place for the parameters
00000008	afa00000		sw	0(%r29), %r0		; "const unsigned int startIndex"
00000009	20010013		addi	%r1, %r0, $19
0000000a	afa10004		sw	4(%r29), %r1		; "const unsigned int endIndex"
0000000b	0c000009		jal	_bubbleSort
0000000c	00000000		nop
0000000d	23bd0008		addi	%r29, %r29, $8		; clean up place for parameters
0000000e	8fbe0000		lw	%r30, 0(%r29)		; Restore frame pointer
0000000f	8fbf0004		lw	%r31, 4(%r29)		; Restore return address
00000010	8fa10008		lw	%r1,  8(%r29)		; Restore r1
00000011	001ee820		add	%r29, %r0, %r30		; Restore stack pointer
00000012	0c000043		jal	_exit
00000013	00000000		nop
00000014	001df020		add	%r30, %r0, %r29		; Establish new frame pointer 
00000015	2bbd0030		subi	%r29, %r29, $(8 + 10*4)	; Adjust Stack Pointer; 8 for oldFP+RET and x*4 for saved Registers
00000016	afbe0000		sw	0(%r29), %r30		; Save the frame pointer 
00000017	afbf0004		sw	4(%r29), %r31		; Save the return address 
00000018	afa10008		sw	 8(%r29), %r1		; r1 is used for comparing-results and for temporary stuff.
00000019	afa2000c		sw	12(%r29), %r2		; r2 is the parameter value "startIndex".
0000001a	afa30010		sw	16(%r29), %r3		; r3 is the parameter value "endIndex".
0000001b	afa40014		sw	20(%r29), %r4		; r4 is the loop-variable "i".
0000001c	afa50018		sw	24(%r29), %r5		; r5 is the loop-variable "j".
0000001d	afa6001c		sw	28(%r29), %r6		; r6 is the loop-end "innerLoopEnd".
0000001e	afa70020		sw	32(%r29), %r7		; r7 is "next_j".
0000001f	afa80024		sw	36(%r29), %r8		; r8 is "value_j".
00000020	afa90028		sw	40(%r29), %r9		; r9 is "value_next_j".
00000021	afaa002c		sw	44(%r29), %r10		; r10 is the start address of 'array'.
00000022	00000000		nop
00000023	8fc20000		lw	%r2, 0(%r30)
00000024	8fc30004		lw	%r3, 4(%r30)
00000025	3c0a0000		lhi	%r10, $(_array*65536)&0xffff
00000026	254a0000		addui	%r10, %r10, $(_array&0xffff)
00000027	40660002		slli	%r6, %r3, $2
00000028	00ca3020		add	%r6, %r6, %r10
00000029	00402020		add	%r4, %r2, %r0
0000002a	0083083a		sltu	%r1, %r4, %r3
0000002b	1020001b		beqz	%r1, OuterLoop_End
0000002c	00000000		nop
0000002d	40450002		slli	%r5, %r2, $2
0000002e	00aa2820		add	%r5, %r5, %r10
0000002f	8ca80000		lw	%r8, 0(%r5)
00000030	00a03820		add	%r7, %r5, %r0
00000031	00a6083a		sltu	%r1, %r5, %r6
00000032	10200010		beqz	%r1, InnerLoop_End
00000033	00000000		nop
00000034	20e70004		addi	%r7, %r7, $4
00000035	8ce90000		lw	%r9, 0(%r7)
00000036	0128083a		sltu	%r1, %r9, %r8
00000037	10200007		beqz	%r1, SkipExchange
00000038	00000000		nop
00000039	00080820		add	%r1, %r0, %r8
0000003a	aca90000		sw	0(%r5), %r9
0000003b	00094020		add	%r8, %r0, %r9
0000003c	ace10000		sw	0(%r7), %r1
0000003d	00014820		add	%r9, %r0, %r1
0000003e	00072820		add	%r5, %r0, %r7
0000003f	00094020		add	%r8, %r0, %r9
00000040	0bfffff1		j	InnerLoop_Start
00000041	00000000		nop
00000042	28c60004		subi	%r6, %r6, $4
00000043	20840001		addi	%r4, %r4, $1
00000044	0bffffe6		j	OuterLoop_Start
00000045	00000000		nop
00000046	8fbe0000		lw	%r30, 0(%r29)		; Restore frame pointer
00000047	8fbf0004		lw	%r31, 4(%r29)		; Restore return address
00000048	8fa10008		lw	%r1, 8(%r29)
00000049	8fa2000c		lw	%r2, 12(%r29)
0000004a	8fa30010		lw	%r3, 16(%r29)
0000004b	8fa40014		lw	%r4, 20(%r29)
0000004c	8fa50018		lw	%r5, 24(%r29)
0000004d	8fa6001c		lw	%r6, 28(%r29)
0000004e	8fa70020		lw	%r7, 32(%r29)
0000004f	8fa80024		lw	%r8, 36(%r29)
00000050	8fa90028		lw	%r9, 40(%r29)
00000051	8faa0030		lw	%r10,48(%r29)
00000052	001ee820		add	%r29, %r0, %r30		; Restore stack pointer
00000053	03e00008		jr	%r31
00000054	00000000		nop
00000055	00000000	_exit:	nop
00000056	00000000		nop
00000057	ffffffff	; ----- HALT for simulator -----
